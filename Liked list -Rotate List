/*___________________________________________________________________________________________________________________________________________________

Given the head of a linked list, rotate the list to the right by k places.

 

Example 1:


Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]
Example 2:


Input: head = [0,1,2], k = 4
Output: [2,0,1]
 


__________________________________________________________________________________________________________________________________________________________*/

class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null || k==0){
            return head;
        }
        ListNode temp1=head;
        int count=1;
        while(temp1.next!=null){
            temp1=temp1.next;
            count++;
        }
        temp1.next=head;
        int m= count - (k%count);
        while(m>0){
            temp1=temp1.next;
            m--;
        }
        head=temp1.next;
        temp1.next=null;
        
        return head;
        
        
    }
}
