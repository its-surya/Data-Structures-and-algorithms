/*________________________________________________________________________________________________

You are given the head of a doubly Linked List and a Key. Your task is to delete all occurrences of the given key and return the new DLL.

Example:

Input: 
2<->2<->10<->8<->4<->2<->5<->2
2
Output: 
10<->8<->4<->5
Explanation: 
All Occurences of 2 have been deleted.
Your Task:

Complete the function void deleteAllOccurOfX(struct Node** head_ref, int key), which takes the reference of the head pointer and an integer value key. Delete all occurrences of the key from the given DLL.

Expected Time Complexity: O(N).

Expected Auxiliary Space: O(1).

___________________________________________________________________________________________________*/

class Solution {
    static Node deleteAllOccurOfX(Node head, int x) {
        // Write your code here
        if(head==null){
            return head;
        }
        Node temp=head;
        Node prev=head;
        Node curr=prev.next;
        while(curr!=null){
            if(curr.data==x){
                prev.next=curr.next;
                curr=prev.next;
            }else{
                prev=curr;
                curr=curr.next;
            }
        }
        if(head.data==x){
          head=head.next;  
        }
        return head;
    }
}
